const int pirSensorPin = 2;          // Digital input pin for PIR sensor
const int ultrasonicTrigPin = 9;     // Digital output pin for ultrasonic sensor trigger
const int ultrasonicEchoPin = 10;    // Digital input pin for ultrasonic sensor echo
const int pirLedPin = 13;             // Digital output pin for PIR sensor LED
const int ultrasonicLedPin = 12;     // Digital output pin for ultrasonic sensor LED

volatile int motionFlag = 0;
volatile int ultrasonicFlag = 0;

void setup() {
  Serial.begin(9600);
  pinMode(ultrasonicTrigPin, OUTPUT);
  pinMode(ultrasonicEchoPin, INPUT);
  pinMode(pirLedPin, OUTPUT);
  pinMode(ultrasonicLedPin, OUTPUT);

  //  interrupt for the PIR sensor
  attachInterrupt(digitalPinToInterrupt(pirSensorPin), pirMotionDetected, RISING);
}

void loop() {
  ultrasonicDetected();
}

void pirMotionDetected() {
  motionFlag = 1;
  checkAndHandleFlags();
}

void ultrasonicDetected() {

  long duration, distance;
  
  digitalWrite(ultrasonicTrigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(ultrasonicTrigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(ultrasonicTrigPin, LOW);
  
  duration = pulseIn(ultrasonicEchoPin, HIGH);
  distance = duration * 0.034 / 2;

  //  distance threshold 
  if (distance < 20) {
    ultrasonicFlag = 1;
    checkAndHandleFlags();
  }
}

void checkAndHandleFlags() {
  if (motionFlag) {
    digitalWrite(pirLedPin, HIGH);  // Turn on PIR sensor LED
    Serial.println("Motion detected!");

   

    delay(1000);  // Delay

    digitalWrite(pirLedPin, LOW);  // Turn off PIR sensor LED
    Serial.println("PIR LED turned off");

    motionFlag = 0;
  }

  if (ultrasonicFlag) {
    digitalWrite(ultrasonicLedPin, HIGH);  // Turn on ultrasonic sensor LED
    Serial.println("Ultrasonic sensor condition met!");

   

    delay(1000);  // Delay

    digitalWrite(ultrasonicLedPin, LOW);  // Turn off ultrasonic sensor LED
    Serial.println("Ultrasonic LED turned off");

    ultrasonicFlag = 0;
  }
}
